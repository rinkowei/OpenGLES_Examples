#version 310 es

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
layout (binding = 0, rgba32f) uniform writeonly highp image2D outputImage;

uniform highp sampler2D inputImage;

void main()
{
	const float PI = 3.14159;
	const float directions = 16.0;
	const float quality = 3.0;
	const float size = 8.0;

	vec2 radius = vec2(size);

	ivec2 pos = ivec2(gl_GlobalInvocationID.xy);

	vec4 color = texelFetch(inputImage, pos, 0);

	for (float d = 0.0; d < PI * 2.0; d += PI * 2.0 / directions)
	{
		for(float i = 1.0 / quality; i <= 1.0; i += 1.0 / quality)
        {
			color += texelFetch(inputImage, pos + ivec2(cos(d) * size * i, sin(d) * size * i), 0);		
        }
	}

	color /= (quality * directions - 15.0);
	imageStore(outputImage, pos, color);
}